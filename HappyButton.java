/*
 * UoPeople: CS 1102 Programming 1 - Unit 7 A Happy Face
 * Author: Pajama Programmer
 * Date 11-Mar-2016
 * 
 * Description: Unit 7 Program Assignment. 
 * The purpose of this assignment is to practice creating graphics in Java.
 * The assignment was to create a program that will display a happy face in its own window... 
 * 
 * Because I felt the assignment was too easy - the coded needed was in the learning videos...
 * I decided to add another button that controls an event Timer, which in turn controls the 
 * movement of the Happy Face. About half way through I realized that this was overly complicated, 
 * but there was no turning back... I did manage to implement the feature - though I still don't 
 * understand 100% how I did it! 
 */
package happyface;

//Various and assorted imports
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author PajamaProgrammer
 */
public class HappyButton extends JFrame implements ActionListener
{
    JButton jbtok = new JButton("OK"); //The ok button, this will control the start/stop of the Timer Event
    JLabel label = new JLabel();
    //HappyFace face;
    Timer frameTimer;   //Timer event
    private boolean move; //Controls which label to display
    
    //Constructor for Happy Button
    HappyButton(HappyFace faceContent)
    {
        move = false; //move is set to false
        frameTimer = new Timer(50,faceContent); //Create Timer event, register face content to listen to Timer Events
        
        getContentPane().setLayout(new FlowLayout());
        label.setText("Make Happy Face Move?"); //Label to let user know purpose of this button
        getContentPane().add(label); //add label
        
        getContentPane().add(jbtok); //add button
        jbtok.addActionListener(this); //add an actionListener to the button, this will cause an Action event message to be sent whenever the user clicks the button
        
        //Drawing the frame...
        setSize(200, 100);
        setResizable(false);
        setLocation(400, 10);
        setVisible(true);
    }
    
    //Whenever the user clicks the 'ok' button, an action event is sent and will be handled here
    //If the action event was generated by the ok button (in this program that is the only case, but 
    //I checked for this condition in case I decide to go back later and add more buttons, etc), then
    //the label is changed to the appropriate message, the timer is started/stopped, and the move flag is flipped. 
    @Override
    public void actionPerformed(ActionEvent evt)
    {
        if (evt.getSource() == jbtok)
        {    
            if (move) //animation was moving
            {
                //System.out.println("Move Happy Face, stop!"); 
                label.setText("Make Happy Face Move?"); //Change label
                frameTimer.stop(); //stop timer
                move = false; //update move flag
            }
            else //animation was not moving
            {
                //System.out.println("Move Happy Face, start!");
                label.setText("Make Happy Face Stop?"); //change label
                frameTimer.start(); //start timer
                move = true; //update move flag
            }
            
        }
    }
    
    
}
